# Title_Text
//标题，如果需要的话

# Notes
//对文件进行的附注
//如果全文件由一个人完成之类的情况，也可以把一部分元数据写在这里
Author: Nanaly
Version: 0.1.0
Last Update: 2023-03-20

# References
//文件导入，或称引用模块声明

## Chara_Name
//角色名，用来标志同一文件中不同角色或不同地点等

### Metadata
//角色元数据，包括称呼、作者等必要的信息
Selfname: 人家
Callname: 小娜娜莉
CallMaster: 主人

//记录tag
tags：
    - 巨乳
    - 近视
    - 男友/丈夫

//记录事件列表
//使用 事件名 + 制表符 + #+引用标签+事件编号 来记录
common_event:
    - 第一次相识    #fst_1
    - 第二次相识    #snd_2
    - 初夜         #fnt_3
    - 纯爱结局      #lve_4
    - 恶堕         #fle_5
customised_event:
    - 酒吧常客      #bar_6
    - 第一次烂醉    #add_7
    - 赌局         #cas_8

### Events
//事件部分

#### Events_Name @Anchor_Name
//事件名+引用标记，由于事件只占用h4、h5两个层级，因此需要事件编号标明事件层级关系，用事件名表明本段文本的用途
//事件只记录事件文本和流程，将所有子事件都单独书写，如同C语言不允许在定义函数内部再定义新函数一样

#### 第一次相识 @fst_1
“你的酒。”
[->fst_1.1]
“Dry Martiny，很经典的配方。”

##### SubEvent_Name @fst_1.1
//子事件名+引用标记(子事件编号)，有时是子事件，有时是事件中的条件判断差分，每多一层多加一个点号
    Event_Text1.1

#### 初夜 @fnt_3
“我们相处了得有 @days 天吧， {{During>=20?真慢:真快}} 呢。”
```Color(Pink)Italic(True)
她的眼里浮现出粉色的幽光，显得妖媚且迷人。
```
……
@Dirtytalk
//使用@引用函数，如输出随机呻吟的Dirtytalk等

### Contents
//如果有特殊的引用内容，可以在这里声明。

### Note
//随便写的啦~~~真的是**随便**写的哦

## 水手

## 酒吧老板娘
